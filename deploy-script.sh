#!/bin/bash

# Script de d√©ploiement automatis√© pour Generation Phanerosis
# Usage: ./deploy-script.sh [production|staging]

set -e

ENVIRONMENT=${1:-production}
APP_DIR="/var/www/generation-phanerosis"
BACKUP_DIR="/var/backups/generation-phanerosis"
DATE=$(date +%Y%m%d_%H%M%S)

echo "üöÄ D√©ploiement de Generation Phanerosis en mode $ENVIRONMENT"

# Cr√©ation des r√©pertoires de sauvegarde
sudo mkdir -p $BACKUP_DIR

# Sauvegarde de la base de donn√©es
echo "üì¶ Sauvegarde de la base de donn√©es..."
if [ "$ENVIRONMENT" = "production" ]; then
    mysqldump -u phanerosis_user -p generation_phanerosis > $BACKUP_DIR/db_backup_$DATE.sql
    echo "‚úÖ Sauvegarde cr√©√©e: $BACKUP_DIR/db_backup_$DATE.sql"
fi

# Sauvegarde des fichiers upload√©s
echo "üìÅ Sauvegarde des fichiers upload√©s..."
if [ -d "$APP_DIR/storage/app/public" ]; then
    sudo cp -r $APP_DIR/storage/app/public $BACKUP_DIR/uploads_backup_$DATE
    echo "‚úÖ Sauvegarde des uploads cr√©√©e"
fi

# Mise en maintenance
echo "üîß Mise en maintenance..."
cd $APP_DIR
php artisan down --message="Mise √† jour en cours..." --retry=60

# Pull des derni√®res modifications
echo "‚¨áÔ∏è R√©cup√©ration des derni√®res modifications..."
git pull origin main

# Installation des d√©pendances PHP
echo "üì¶ Installation des d√©pendances PHP..."
composer install --optimize-autoloader --no-dev --no-interaction

# Installation des d√©pendances Node.js
echo "üì¶ Installation des d√©pendances Node.js..."
npm ci --production

# Build des assets
echo "üî® Build des assets..."
npm run build

# Nettoyage du cache
echo "üßπ Nettoyage du cache..."
php artisan cache:clear
php artisan config:clear
php artisan route:clear
php artisan view:clear

# Migration de la base de donn√©es
echo "üóÑÔ∏è Migration de la base de donn√©es..."
php artisan migrate --force

# Optimisation pour la production
echo "‚ö° Optimisation pour la production..."
php artisan config:cache
php artisan route:cache
php artisan view:cache

# Mise √† jour des permissions
echo "üîê Mise √† jour des permissions..."
sudo chown -R www-data:www-data $APP_DIR
sudo chmod -R 755 $APP_DIR
sudo chmod -R 775 $APP_DIR/storage
sudo chmod -R 775 $APP_DIR/bootstrap/cache

# Red√©marrage des services
echo "üîÑ Red√©marrage des services..."
sudo systemctl restart php8.2-fpm
sudo systemctl reload nginx

# Sortie de maintenance
echo "‚úÖ Sortie de maintenance..."
php artisan up

# Nettoyage des anciennes sauvegardes (garder les 7 derniers jours)
echo "üßπ Nettoyage des anciennes sauvegardes..."
find $BACKUP_DIR -name "db_backup_*.sql" -mtime +7 -delete
find $BACKUP_DIR -name "uploads_backup_*" -mtime +7 -exec rm -rf {} \;

echo "üéâ D√©ploiement termin√© avec succ√®s!"
echo "üìä V√©rification de l'application..."
curl -f http://localhost > /dev/null && echo "‚úÖ Application accessible" || echo "‚ùå Probl√®me d'accessibilit√©"

# Notification (optionnel)
if command -v notify-send &> /dev/null; then
    notify-send "D√©ploiement termin√©" "Generation Phanerosis a √©t√© d√©ploy√© avec succ√®s!"
fi 